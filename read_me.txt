Задача: поиск монет на изображении
Упрощенная формулировка: поиск кругов на изображении

Тестовые данные:
coins - папка, сожержащая 10 изображений с монетами
circles description.txt - описание кругов на изображениях (координаты центра + радиус)

Полученная точность:средний F1 score = 0.84
   pic	tp	fn	fp	recall	        precision	  f1
05.jpg	1.0	1.0	1.0	0.500000	0.500000	0.500000
09.jpg	2.0	1.0	1.0	0.666667	0.666667	0.666667
10.jpg	2.0	0.0	1.0	1.000000	0.666667	0.800000
11.jpg	2.0	3.0	2.0	0.400000	0.500000	0.444444
12.jpg	1.0	0.0	0.0	1.000000	1.000000	1.000000
13.jpg	1.0	0.0	0.0	1.000000	1.000000	1.000000
17.jpg	4.0	0.0	0.0	1.000000	1.000000	1.000000
19.jpg	2.0	0.0	0.0	1.000000	1.000000	1.000000
20.jpg	9.0	0.0	0.0	1.000000	1.000000	1.000000
21.jpg	1.0	0.0	0.0	1.000000	1.000000	1.000000

Шаги в поиске кургов на изображении:
1. предобработка изображения:
2. изменение цветовой системы с BGR на GRAY
3. размытие изображения
4. поиск контуров на изображении
5. изменение цветовой системы полученного изображения на двухцветную
6. удаление внутренних/внешних мелких деталий
7. удаление окружностей по следующим принципам:
- не входит во 2/3 квантиль по радиусу
- выходит за пределы изображения
10. удаление дублирующих кругов по IoV
11. отрисовка центра и окружности для найденных кругов

Для подбора параметров использовался метод grid search.
Были найдены следующий оптимальные параметры для функций:
1. cv2.Canny(image, 10, 120)
2. cv2.HoughCircles(img_preprocessed, cv2.HOUGH_GRADIENT,1, 50, param1=300, param2=7, minRadius=50, maxRadius=500)
3. threshhold для IoV - 10%

Опробованные методы, не увеличившие точность модели:
1. Кластерицзация ценров
2. Поиск контуров через cv2.findContours
3. Отбор кругов по разнице среднего цвета круга и среднего цвета всего изображения




